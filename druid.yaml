apiVersion: "druid.apache.org/v1alpha1"
kind: "Druid"
metadata:
  name: tiny-cluster
spec:
  nodeSelector: 
    zone: YOUR ZONE
  commonConfigMountPath: "/opt/druid/conf/druid/cluster/_common"
  image: leiking/druid-mysql:0.18.1
  startScript: /druid.sh
  securityContext:
    fsGroup: 0
    runAsUser: 0
    runAsGroup: 0
  common.runtime.properties: |
    druid.monitoring.monitors=["org.apache.druid.java.util.metrics.JvmMonitor"]
    druid.emitter.logging.logLevel=debug
    druid.startup.logging.logProperties=true
    druid.sql.enable=true
    # Zookeeper
    druid.zk.service.host=tiny-cluster-zk-0.tiny-cluster-zk
    druid.zk.paths.base=/druid
    druid.zk.service.compress=false
    # Metadata Store
    druid.metadata.storage.type=mysql
    druid.metadata.storage.connector.connectURI=jdbc:mysql://x.x.x.x/druid?characterEncoding=UTF-8
    druid.metadata.storage.connector.user=admin
    druid.metadata.storage.connector.password=PASSWORD
    druid.metadata.storage.connector.createTables=true
    # Deep Storage
    druid.storage.type=local
    druid.storage.storageDirectory=/druid/data/deepstorage
    #
    # Extensions
    #
    #druid.extensions.loadList=["druid-s3-extensions"]
    druid.extensions.directory=/opt/druid/extensions
    druid.extensions.loadList=["druid-s3-extensions","druid-kafka-indexing-service","druid-datasketches","mysql-metadata-storage"]
    #
    # Service discovery
    #
    druid.selectors.indexing.serviceName=druid/overlord
    druid.selectors.coordinator.serviceName=druid/coordinator
  jvm.options: |-
    -XX:+ExitOnOutOfMemoryError
    -XX:+PrintFlagsFinal
    -server
    -XX:MaxDirectMemorySize=10240g
    -Duser.timezone=UTC
    -Dfile.encoding=UTF-8
    -Dlog4j.debug
    -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager
  services:
    - spec:
        type: ClusterIP
        #        clusterIP: None  
  log4j.config: |-
    <?xml version="1.0" encoding="UTF-8" ?>
    <Configuration status="WARN">
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/>
            </Console>
        </Appenders>
        <Loggers>
            <Root level="debug">
                <AppenderRef ref="Console"/>
            </Root>
        </Loggers>
    </Configuration>
  nodes:
    brokers:
      druid.port: 8088
      extra.jvm.options: |-
        -Xmx1G
        -Xms1G
      nodeConfigMountPath: "/opt/druid/conf/druid/cluster/query/broker"
      nodeType: "broker"
      replicas: 1
      runtime.properties: |
        druid.service=druid/broker
        # HTTP server threads
        druid.broker.http.numConnections=5
        druid.server.http.numThreads=10
        # Processing threads and buffers
        druid.processing.buffer.sizeBytes=1
        druid.processing.numMergeBuffers=1
        druid.processing.numThreads=1
        druid.sql.enable=true
      volumeMounts:
        - mountPath: /druid/data
          name: data-volume
      volumes:
        - name: data-volume
          emptyDir: {}
      resources:
        requests:
          memory: "2G"
          cpu: "2"
        limits:
          memory: "2G"
          cpu: "2"
      
    coordinators:
      nodeType: "coordinator"
      druid.port: 8088
      nodeConfigMountPath: /opt/druid/conf/druid/cluster/master/coordinator-overlord
      runtime.properties: |
        druid.service=druid/coordinator

        # HTTP server threads
        druid.coordinator.startDelay=PT30S
        druid.coordinator.period=PT30S
      extra.jvm.options: |-
        -Xmx1G
        -Xms1G
      volumeMounts:
        - mountPath: /druid/data
          name: data-volume
      volumes:
        - name: data-volume
          emptyDir: {}
      replicas: 1
      resources:
        requests:
          memory: "2G"
          cpu: "2"
        limits:
          memory: "2G"
          cpu: "2"
            
    historicals:
      nodeType: "historical"
      druid.port: 8088
      replicas: 1
      nodeConfigMountPath: "/opt/druid/conf/druid/cluster/data/historical"
      runtime.properties: |
        druid.service=druid/historical
        druid.server.http.numThreads=5
        druid.processing.buffer.sizeBytes=1
        druid.processing.numMergeBuffers=1
        druid.processing.numThreads=1
        # Segment storage
        druid.segmentCache.locations=[{\"path\":\"/druid/data/segments\",\"maxSize\":10737418240}]
        druid.server.maxSize=10737418240
      extra.jvm.options: |-
        -Xmx1G
        -Xms1G
      volumeMounts:
        - mountPath: /druid/data
          name: data-volume
      volumes:
        - name: data-volume
          emptyDir: {}
      resources:
        requests:
          memory: "2G"
          cpu: "2"
        limits:
          memory: "2G"
          cpu: "2"
      # livenessProbe:
      #     initialDelaySeconds: 30
      #     httpGet:
      #       path: /status/health
      #       port: 8088
      readinessProbe:
          initialDelaySeconds: 30
          httpGet:
            path: /status/health
            port: 8088
      
    routers:
      druid.port: 8888
      extra.jvm.options: |-
          -Xmx512m
          -Xms512m
      nodeType: router
      nodeConfigMountPath: "/opt/druid/conf/druid/cluster/query/router"
      replicas: 1
      runtime.properties: |
          druid.service=druid/router
          druid.plaintextPort=8888

          # HTTP proxy
          druid.router.http.numConnections=50
          druid.router.http.readTimeout=PT5M
          druid.router.http.numMaxThreads=100
          druid.server.http.numThreads=100

          # Service discovery
          druid.router.defaultBrokerServiceName=druid/broker
          druid.router.coordinatorServiceName=druid/coordinator

          # Management proxy to coordinator / overlord: required for unified web console.
          druid.router.managementProxy.enabled=true
      volumeMounts:
        - mountPath: /druid/data
          name: data-volume
      volumes:
        - name: data-volume
          emptyDir: {}

    middlemanagers:
      druid.port: 8091
      extra.jvm.options: |-
          -Xmx4G
          -Xms4G
      nodeType: middleManager
      nodeConfigMountPath: /opt/druid/conf/druid/cluster/data/middleManager
      ports:
        -
          containerPort: 8100
          name: peon-0-pt
        -
          containerPort: 8101
          name: peon-1-pt
        -
          containerPort: 8102
          name: peon-2-pt
        -
          containerPort: 8103
          name: peon-3-pt
        -
          containerPort: 8104
          name: peon-4-pt
      replicas: 1
      resources:
        limits:
          cpu: "2"
          memory: 5Gi
        requests:
          cpu: "2"
          memory: 5Gi
      # livenessProbe:
      #     initialDelaySeconds: 30
      #     httpGet:
      #       path: /status/health
      #       port: 8091
      # readinessProbe:
      #     initialDelaySeconds: 30
      #     httpGet:
      #       path: /status/health
      #       port: 8091
      runtime.properties: |-
          druid.service=druid/middleManager
          druid.worker.capacity=4
          druid.indexer.runner.javaOpts=-server -XX:MaxDirectMemorySize=10240g -Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/druid/data/tmp -Dlog4j.debug -XX:+UnlockDiagnosticVMOptions -XX:+PrintSafepointStatistics -XX:PrintSafepointStatisticsCount=1 -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError -XX:+UseG1GC -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -XX:HeapDumpPath=/druid/data/logs/peon.%t.%p.hprof -Xms10G -Xmx10G
          druid.indexer.task.baseTaskDir=/druid/data/baseTaskDir
          druid.server.http.numThreads=10
          druid.indexer.fork.property.druid.processing.buffer.sizeBytes=1
          druid.indexer.fork.property.druid.processing.numMergeBuffers=1
          druid.indexer.fork.property.druid.processing.numThreads=1

          # Processing threads and buffers on Peons
          druid.indexer.fork.property.druid.processing.numMergeBuffers=2
          druid.indexer.fork.property.druid.processing.buffer.sizeBytes=100000000
          druid.indexer.fork.property.druid.processing.numThreads=1
      services:
        -
          spec:
            ports:
              -
                name: tcp-service-port
                port: 8091
                targetPort: 8091
              -
                name: peon-port-0
                port: 8100
                targetPort: 8100
              -
                name: peon-port-1
                port: 8101
                targetPort: 8101
              -
                name: peon-port-2
                port: 8102
                targetPort: 8102
              -
                name: peon-port-3
                port: 8103
                targetPort: 8103
              -
                name: peon-port-4
                port: 8104
                targetPort: 8104
            type: ClusterIP
      volumeClaimTemplates:
        -
          metadata:
            name: data-volume
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 30Gi
            storageClassName: "rbd"
      volumeMounts:
        -
          mountPath: /druid/data
          name: data-volume
          #securityContext:
          #  fsGroup: 0
          #  runAsGroup: 0
          #  runAsUser: 0


    overlords:
      druid.port: 8090
      extra.jvm.options: |-
          -Xmx4G
          -Xms4G
      # log4j.config: |-
      #     <Configuration status="WARN">
      #       <Appenders>
      #         <Console name="logline" target="SYSTEM_OUT">
      #           <PatternLayout pattern="%d{ISO8601} %p [%t] %c - %m%n"/>
      #         </Console>
      #         <Console name="msgonly" target="SYSTEM_OUT">
      #           <PatternLayout pattern="%m%n"/>
      #         </Console>
      #       </Appenders>
      #       <Loggers>
      #         <Root level="info">
      #           <AppenderRef ref="logline"/>
      #         </Root>
      #         <Logger name="org.apache.druid.java.util.emitter.core.LoggingEmitter" additivity="false" level="debug">
      #           <AppenderRef ref="msgonly"/>
      #         </Logger>
      #       </Loggers>
      #     </Configuration>
      nodeType: overlord
      nodeConfigMountPath: /opt/druid/conf/druid/cluster/master/coordinator-overlord
      replicas: 1
      resources:
        limits:
          cpu: "2"
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      runtime.properties: |-
          druid.service=druid/overlord
          druid.indexer.queue.startDelay=PT30S
          druid.indexer.runner.type=remote
          druid.indexer.storage.type=metadata
          # druid.indexer.runner.type=local
          # druid.indexer.storage.type=metadata
      # livenessProbe:
      #       initialDelaySeconds: 30
      #       httpGet:
      #         path: /status/health
      #         port: 8081
      readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /status/health
              port: 8090
      services:
        -
          metadata:
            name: overlord-%s-service
          spec:
            ports:
              -
                name: tcp-service-port
                port: 8090
                targetPort: 8090
            type: ClusterIP
      volumeClaimTemplates:
        -
          metadata:
            name: data-volume
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: rbd
      volumeMounts:
        -
          mountPath: /druid/data
          name: data-volume
          # securityContext:
          #   fsGroup: 1000
          #   runAsGroup: 1000
          #   runAsUser: 1000
